docker安装

1) 安装ubuntu 16.04 (ubuntu-16.04-desktop-amd64.iso)

2) 更新系统

  (1) Firefox浏览器中设置代理(首选项 -> 高级 -> 网络 -> 连接):
    手动配置代理(proxy.zte.com.cn:80)
    不使用代理(localhost,127.0.0.1,.zte.com.cn,10.0.0.0/8,192.0.0.0/8)

  (2) 全局代理设置(系统设置 -> 网络 -> 网络代理): 手动, proxy.zte.com.cn:80

  (3) 启动Firefox浏览器, 连接网络

  (4) 更新系统
    $ sudo apt update

  (5) 安装openssh-server
    $ sudo apt install openssh-server

  (6) 升级系统
    $ sudo apt upgrade
    $ sudo apt autoremove

3) 安装需要的软件包
    $ sudo apt-get install samba zlib1g-dev libgdbm-dev libreadline-dev libssl-dev bison

    $ sudo smbpasswd -a user

    $ sudo vi /etc/samba/smb.conf
      [share]
        comment = share
        path = /home/user/share
        writeable = yes
        browseable = yes
        valid users = user

    $ sudo /etc/init.d/smbd restart

4) 安装docker

  (1) 安装apt https传输和CA认证
    $ sudo apt-get install apt-transport-https ca-certificates
    $ sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

  (2) 增加docker软件源
    $ sudo vi /etc/apt/sources.list.d/docker.list
      deb https://apt.dockerproject.org/repo ubuntu-xenial main

  (3) 安装docker
    $ sudo apt-get update

    $ sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual
    $ sudo apt-get install docker-engine

  (4) 启动docker服务
    $ sudo systemctl enable docker.service
    $ sudo systemctl start docker.service

  (5) 配置docker代理
    $ sudo mkdir /etc/systemd/system/docker.service.d
    $ sudo vi /etc/systemd/system/docker.service.d/http-proxy.conf

      [Service]
      Environment="HTTP_PROXY=http://proxy.zte.com.cn:80/" "NO_PROXY=localhost,127.0.0.1,.zte.com.cn,10.0.0.0/8,192.0.0.0/8"

    $ sudo systemctl daemon-reload
    $ sudo systemctl restart docker

  (6) 测试docker
    $ sudo docker run hello-world

5) 搭建registry (ip 10.8.9.20:5000)

  (1) 使用docker用户
    $ su docker

  (2) 创建目录
    $ sudo mkdir -p /opt/docker
    $ sudo chown -R docker:user /opt/docker

    $ cd /opt/docker
    $ mkdir -p registry/certs
    $ mkdir -p registry/auth
    $ mkdir -p registry/data

  (2) 生成用户和密码
    $ cd /opt/docker/registry

    $ openssl req -newkey rsa:2048 -nodes -sha256 -x509 -days 3650 -subj '/CN=docker-hub/' -keyout certs/registry.key -out certs/registry.crt
    $ sudo docker run --entrypoint htpasswd registry -Bbn docker docker > auth/htpasswd

  (3) 启动registry
    $ vi /opt/docker/registry_docker

      docker run -d -p 5000:5000 --restart=always --name registry \
        -v /opt/docker/registry/auth:/auth \
        -v /opt/docker/registry/certs:/certs \
        -v /opt/docker/registry/data:/var/lib/registry \
        -e REGISTRY_AUTH=htpasswd \
        -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
        -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
        -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry.crt \
        -e REGISTRY_HTTP_TLS_KEY=/certs/registry.key \
        registry

  (4) 登录registry
    $ sudo docker login docker-hub:5000

  (5) 查看registry
    https://docker-hub:5000/v2/_catalog

  (6) 停止registry
    $ sudo docker stop registry
    $ sudo docker rm registry

  (7) 配置docker client(在docker-hub上)
    $ sudo vi /etc/hosts

      10.8.9.20	docker-hub

    $ sudo mkdir -p /etc/docker/certs.d/docker-hub:5000
    $ sudo cp /opt/docker/registry/certs/registry.crt /etc/docker/certs.d/docker-hub:5000

  (8) 配置docker client
    $ sudo vi /etc/hosts

      10.8.9.20	docker-hub

    $ sudo mkdir -p /etc/docker/certs.d/docker-hub:5000
    $ sudo scp -r docker@10.8.9.20:/opt/docker/registry/certs/registry.crt /etc/docker/certs.d/docker-hub:5000

6) ui-for-docker

  $ sudo docker run --privileged -v /var/run/docker.sock:/var/run/docker.sock --name ui-for-docker -d -p 80:9000 uifd/ui-for-docker

7) 启动数据库

  (1) mysql
    $ sudo docker run --name mysql -e MYSQL_ROOT_PASSWORD=mysql -d -p 3306:3306 mariadb

  (2) mssql
    $ sudo docker run --name mssql -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=admin!1234' -d -p 1433:1433 microsoft/mssql-server-linux
    $ sudo docker run --name mssql -d -p 1433:1433 moisei/mssql-server-linux
